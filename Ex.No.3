#include <stdio.h>  
#include <stdlib.h>  
  struct node {  
    int element;  
    struct node* left;  
    struct node* right;  
};   
struct node* createNode(int val)  
{  
    struct node* Node = (struct node*)malloc(sizeof(struct node));  
    Node->element = val;  
    Node->left = NULL;  
    Node->right = NULL;  
     return (Node);  
}  
void preorder(struct node* root)  
{  
    if (root == NULL)  
        return;  
    printf("%d\t", root->element);  
    preorder(root->left);  
   preorder(root->right);  
}  
void inorder(struct node* root)  
{  
    if (root == NULL)  
        return;  
    inorder(root->left);  
    printf("%d\t", root->element);  
    inorder(root->right);  
}   
void postorder(struct node* root)  
{  
    if (root == NULL)  
        return;  
    postorder(root->left);  
    postorder(root->right);  
    printf("%d\t", root->element);  
}  
  
  int main()  
{  
    struct node* root = createNode(36);  
    root->left = createNode(26);  
    root->right = createNode(46);  
    root->left->left = createNode(21);  
    root->left->right = createNode(31);  
    root->left->left->left = createNode(11);  
    root->left->left->right = createNode(24);  
    root->right->left = createNode(41);  
    root->right->right = createNode(56);  
   
   printf("\n The Preorder traversal of given binary tree is -\n");  
   preorder(root);  
    printf("\n The Inorder traversal of given binary tree is -\n");  
    inorder(root);  
    printf("\n The Postorder traversal of given binary tree is -\n");  
    postorder(root);  
     return 0;  
}    
