#include <stdio.h>
#define V 4
#define INF 9
{
    int i, j, k
    for (k = 0; k < V; k++)
{
{
                if (dist[i][k] + dist[k][j] < dist[i][j])
                    dist[i][j] = dist[i][k] + dist[k][j];
            }
        }
    }
}

void printsolution(int dist[][V])
{
    printf( "The following matrix shows the shortest distances"
        " between every pair of vertices \n");
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            if (dist[i][j] == INF)
                printf("%7s", "INF");
            else
                printf("%7d", dist[i][j]);
        }
        printf("\n");
    }
}

int main()
{
    /* Let us create the following weighted graph
            10
       (0)------->(3)
        |               /|\
      5|                 |
        |                  |  1
       \|/              |
       (1)---------->(2)
                   3                  */
    
int graph[V][V] = { { 0, 5, INF, 10 },
                        { INF, 0, 3, INF },
                        { INF, INF, 0, 1 },
                        { INF, INF, INF, 0 } };
    floydwarshall(graph);
    return 0;
}
